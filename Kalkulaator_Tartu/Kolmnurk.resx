<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCACkAKYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KKKKACiiigAooooAKTaPQUtFACbFH8I/KlxRXyH/wAFqf21m/Y9/Y7vrfR9RNj428fO+h6K8F4Le6sI
        yhN3frj5wsEXAdQNs01upZDIrDuyzLa+PxdPBYZXnUkor1fV+S3b6LUzqVFCLnLZHsP7Nn7cnwx/a48S
        +LtJ8A+I11q+8E3n2PU0+yywDO5lEkTSKBNEWR1EiEqSh56Z9br+fX/gnn8Vbz/gnX+0t4L8Wal51hou
        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
        /9k=
</value>
  </data>
</root>